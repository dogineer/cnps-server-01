<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.develop.web.domain.admin.dept.mapper.DeptMapper">
    <select id="selectDeptMidList" parameterType="Integer" resultType="DeptDto">
        SELECT id, name, p_id
        FROM dept
        WHERE p_id = ${p_id}
          AND id NOT IN (1)
    </select>

    <select id="selectDeptList" resultType="DeptDto">
        SELECT id, name, p_id
        FROM dept
        WHERE id NOT IN (1)
          AND p_id NOT IN (1, 8, 24)
    </select>

    <select id="selectDetailDept" parameterType="String" resultType="String">
        WITH RECURSIVE C AS (SELECT e.account, d.id, d.p_id, d.name, CONCAT_WS(' > ', d3.name, d2.name, d.name) AS path
                             FROM dept d
                                      INNER JOIN emp e ON d.id = e.dept_id
                                      LEFT JOIN dept d2 ON d.p_id = d2.id
                                      LEFT JOIN dept d3 ON d2.p_id = d3.id)
        SELECT C.path
        FROM C
        WHERE C.account = #{account}
    </select>

    <select id="selectHighDept" resultType="DeptDto">
        SELECT id, name
        FROM dept
        WHERE p_id = 1
          AND id != 1
    </select>

    <select id="selectDeptMembers" resultType="Member" parameterType="Integer">
        SELECT id,
               dept_id AS deptId,
               rank_id AS rankId,
               team_id AS teamId,
               account,
               name,
               birth,
               gender,
               phone,
               email,
               des,
               joined_at,
               approved_at,
               access,
               del_fl,
               password
        FROM emp
        WHERE dept_id = ${deptid}
    </select>

    <select id="selectFindDeptChart" resultType="String" parameterType="Integer">
        WITH RECURSIVE C AS (SELECT d.id, d.p_id, d.name, d.name AS path
                             FROM dept d
                             WHERE d.id = ${deptId}

                             UNION ALL

                             SELECT d.id, d.p_id, d.name, CONCAT(C.path, ' > ', d.name)
                             FROM dept d
                                      INNER JOIN C ON d.p_id = C.id)
        SELECT C.path
        FROM C;
    </select>
</mapper>