<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.develop.web.domain.admin.dept.mapper.DeptMapper">
    <select id="selectTopDept" resultType="DeptDetailDto">
        SELECT id   AS deptId,
               name AS deptName
        FROM dept
        WHERE p_id = 1 AND id != 1
    </select>

    <select id="selectDeptType" parameterType="Integer" resultType="DeptDetailDto">
        SELECT id   AS deptId,
               name AS deptName,
               p_id AS deptParentId
        FROM dept
        WHERE p_id = ${deptParentId}
          AND id NOT IN (1)
    </select>

    <select id="selectDept" resultType="DeptDetailDto">
        SELECT id   AS deptId,
               name AS deptName,
               p_id AS deptParentId
        FROM dept
        WHERE id NOT IN (1)
    </select>

    <select id="selectDeptMember" resultType="UserDto" parameterType="Integer">
        SELECT id,
               dept_id AS deptId,
               pos_id AS posId,
               program_id AS programId,
               account,
               name,
               birth,
               gender,
               phone,
               email,
               des,
               joined_at,
               approved_at,
               access,
               del_fl,
               password
        FROM user
        WHERE dept_id = ${deptid}
    </select>

    <select id="selectDeptPath" resultType="DeptPathDto" parameterType="Integer">
        WITH RECURSIVE C AS (
            SELECT d.id, d.p_id, d.name, d.name AS path
            FROM dept d
            WHERE d.id = ${deptId}

            UNION ALL

            SELECT d.id, d.p_id, d.name, CONCAT(C.path, ' > ', d.name)
            FROM dept d
            INNER JOIN C ON d.p_id = C.id)
        SELECT C.path AS deptPath, C.id AS deptId
        FROM C;
    </select>
</mapper>